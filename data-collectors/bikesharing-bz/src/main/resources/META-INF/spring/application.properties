#### CONFIGURATION OF YOUR PROJECT ####

# Define any property you need for your project, do not configure things inside classes.
# Keeping them here, gives us an overview on what is configurable for this data collector.
# Please describe each property with a short sentence.

# The origin of our data set. Who is responsible for what we retrieve?
app.origin=BIKE_SHARING_BOLZANO

# How often does the the data source update their measurements (in seconds)?
# es. 300 = 5*60 = 5 minutes
app.period=300

# Endpoint parameters for the List of Bike Stations
# If the service needs request params, the parameters "endpoint.measurements.param.i.param_name" and "endpoint.measurements.param.i.station_attr_name" must be filled.
#   "param_name"        is the name of the request param
#   "station_attr_name" is the attribute of the station that holds the value 
# examples:
# curl -H "Token: STRING_TOKEN" -v https://maas.ecospazio.it/api/v1/stations
endpoint.stations.method=GET
endpoint.stations.protocol=https
endpoint.stations.host=maas.ecospazio.it
endpoint.stations.port=
endpoint.stations.path=api/v1/stations

# Endpoint parameters for measurements of each Bike Station (availability slots)
# curl -H "Token: STRING_TOKEN" -v https://maas.ecospazio.it/api/v1/stations/{ID}
endpoint.measurements.method=GET
endpoint.measurements.protocol=https
endpoint.measurements.host=maas.ecospazio.it
endpoint.measurements.port=
endpoint.measurements.path=api/v1/stations/STATION_ID

# Station Type fixed attribute values as seen in bdp-core/dal
# This value is hard coded as constant "Bicycle" in the Converter class, because it must be given at startup in Pusher.initIntegreenTypology() method

# Number of minutes to calculate the future_availability
app.station.future_availability.minutes=60
