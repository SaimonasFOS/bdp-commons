pipeline {
    agent any

    environment{
	SENSORS_CONFIG=credentials('sensors-config.properties')
	SENSORS_WSDL=credentials('sensors-wsdl')
    }
    stages {
        stage('Configure') {
            steps {
	       sh 'cat "${SENSORS_CONFIG}" > data-collectors/trafficSensorsBZ/src/main/resources/META-INF/spring/application.properties'
	       sh 'cat "${SENSORS_CONFIG}" > data-collectors/trafficSensorsBZ/src/test/resources/META-INF/spring/application.properties'
               sh 'cp "${SENSORS_WSDL}" data-collectors/trafficSensorsBZ/src/main/resources/DataDispatcherWebServices.wsdl'
	       sh 'sed -i -e "s%\\(log4j.rootLogger=\\).*\\$%\\1INFO,stdout,R%" data-collectors/trafficSensorsBZ/src/main/resources/log4j.properties'
               sh 'sed -i -e "s%\\(log4j.appender.R.File=\\).*\\$%\\1/var/log/opendatahub/data-collectors/traffic-sensors-dc.log%" data-collectors/trafficSensorsBZ/src/main/resources/log4j.properties'
            }
        }
        stage('Test') {
            steps {
	       sh 'cd data-collectors/trafficSensorsBZ && mvn clean test' 
            }
        }
	stage('Build'){
            steps {
	       sh 'cd data-collectors/trafficSensorsBZ && mvn package' 
            }
	}
	stage('Archive'){
            steps {
	       sh 'cp data-collectors/trafficSensorsBZ/target/dc-traffic-bz.war /var/builds/prod-server-dc/' 
            }
	}
    }
}
