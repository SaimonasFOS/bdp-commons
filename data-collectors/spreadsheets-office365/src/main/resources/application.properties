
# Microsoft's Graph API configuration
auth.tenant_id=${TENANT_ID}
auth.clientId=${CLIENT_ID}

auth.keyPath=${KEY_PATH}
auth.certPath=${CERT_PATH}

graph.email=${EMAIL}
graph.sheetName=${SHEET_NAME}

cron=${CRON}}

# OpenDataHub O-AUTH configuration
authorizationUri=${OAUTH_AUTH_URI}
tokenUri=${OAUTH_TOKEN_URI}
BASE_URI=${OAUTH_BASE_URI}
clientId=${OAUTH_CLIENT_ID}
clientName=${OAUTH_CLIENT_NAME}
clientSecret=${OAUTH_CLIENT_SECRET}
# keycloak scope
scope=openid

# OpenDataHub station type configuration, can be removed if not using ODH
spreadsheetId=office365
suportedLanguages=en,de,it,lad
headers.nameId=name
headers.addressId=address
headers.longitudeId=longitude
headers.latitudeId=latitude
headers.metaDataId=metadata-id
stationtype=NOI-Place
spreadsheet.sheets.metadataId=metadata-id
composite.unique.key=name,address
provenance.name=dc-office365
provenance.version=1.0.0-SNAPSHOT


# Next rows are application configuration
# Do not touch if really needed or you know what you are doing

# SPRING CONFIG, without you'll get circular dependency error
## disable spring wec mvc auto configuration
spring.main.web-environment=false
## sets web type to none, since we don't need a web server
spring.main.web-application-type=NONE

# BDP config, placeholders just to prevent crashing
# Spring boot prevents dc-interface to look in its own application.properties
bdp_host=localhost
bdp_port=00000
bdp_endpoint=localhost